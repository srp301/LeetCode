Merge Intervals:
Given a collection of intervals, merge all overlapping intervals.

For example,
Given [1,3],[2,6],[8,10],[15,18],
return [1,6],[8,10],[15,18].

分析:
	题意是要求我们合并区间，本题的区间是无序的，所以要先根据区间的左端点值来排序，首先把第一个区间存入结果中，然后从第二个开始遍历区间集，
	如果结果中最后一个区间和遍历的当前区间无重叠，直接将当前区间存入结果中，如果有重叠，将结果中最后一个区间的end值更新为结果中最后一个
	区间的end和当前end值之中的较大值，然后继续遍历区间集，以此类推可以得到最终结果

Solution:
/**
 * Definition for an interval.
 * function Interval(start, end) {
 *     this.start = start;
 *     this.end = end;
 * }
 */
/**
 * @param {Interval[]} intervals
 * @return {Interval[]}
 */
var merge = function(intervals) {
    if(intervals.length === 0){
        return [];
    }
    intervals = intervals.sort(function(a,b){
        if(a.start>b.start){
            return 1;
        }else if (a.start<b.start){
            return -1;
        }else {
            return 0;
        }
    });
    let rtnall = [];
    rtnall.push(intervals[0]);
    for(let i = 1;i<intervals.length;i++){
        if(intervals[i].start <= rtnall[rtnall.length-1].end){
            rtnall[rtnall.length-1].end = Math.max(intervals[i].end,rtnall[rtnall.length-1].end);
        }else{
            rtnall.push(intervals[i]);
        }
    }
    return rtnall;
};