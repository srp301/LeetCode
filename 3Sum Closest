3Sum Closest:
Given an array S of n integers, find three integers in S such that the sum is closest to a given number, target. 
Return the sum of the three integers. You may assume that each input would have exactly one solution.

    For example, given array S = {-1 2 1 -4}, and target = 1.

    The sum that is closest to the target is 2. (-1 + 2 + 1 = 2).

Solution:
/**
 * @param {number[]} nums
 * @param {number} target
 * @return {number}
 */
var threeSumClosest = function(nums, target) {
    let lo,hi,sum ;
    let minsum = Number.MAX_VALUE;
    if(nums.length===3){
       return nums[0]+nums[1]+nums[2];
    }
    nums = nums.sort((a,b)=>{
        if(a<b) return -1;
        if(a>b) return 1;
    });
    sum = nums[0]+nums[1]+nums[2];
    for(let i = 0;i<nums.length;i++){
        while(nums[i]===nums[i-1]){
            i++;
        }
        lo=i+1;
        hi=nums.length-1;
        while(lo<hi){
            sum = nums[i]+nums[lo]+nums[hi];
            if(sum===target){
                return target;
            }else if(sum>target){
                hi--;
                while(nums[hi]===nums[hi+1]){
                    hi--;
                }
            }else if(sum<target){
                
                lo++;
                while(nums[lo]===nums[lo-1]){
                    lo++;
                }
            }
            if(Math.abs(sum-target)<Math.abs(minsum-target)){
                minsum = sum;
            }
        }
    }
    return minsum;
};